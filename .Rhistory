out$sd_power[i] <- sd(Results$power)
out$N[i] <- nrow(Results)
}
} else{
for(i in 1:length(n)){
Results <- get_power_np(dm, Total, n[i], fdr, rho_mu, rho_sd, Tissue, Nmax, MOE, Nmin=20, test)
out$avg_power[i] <- mean(Results$power)
out$sd_power[i] <- sd(Results$power)
out$N[i] <- nrow(Results)
}
}
out
}
get_power(10,1000,10,.05,.6,test="kenall")
get_power <- function(dm, Total, n, fdr, rho_mu, rho_sd=0, Tissue="Saliva", Nmax=1000, MOE=.01, test="pearson"){
if(!is.numeric(dm) || length(dm)>1 || dm < 1 || floor(dm)!= dm){stop(
"The number of significant associations (dm) must be a single positive integer"
)}
if(!is.numeric(Total) || length(Total)>1 || Total < 1 || floor(Total)!= Total){stop(
"The total numnber of CpG sites (Total) must be a single positive integer"
)}
for(i in 1:length(n)){
if(!is.numeric(n[i]) || n[i] < 2 || floor(n[i])!= n[i]){stop(
"All sample sizes (n) must be positive integers greater than 1"
)}
}
if(dm > Total){stop(
"dm must be less than or equal to N"
)}
if(!is.numeric(fdr) || length(fdr)>1 || fdr <= 0 || fdr >= 1){stop(
"The False Discovery Rate (fdr) must be a single number in (0,1)"
)}
if(!is.numeric(rho_mu) || length(rho_mu)>1 || abs(rho_mu) > 1 || abs(rho_mu) <= 0){stop(
"rho_mu must be a single number with absolute value in (0,1]"
)}
if(!is.numeric(rho_sd) || length(rho_sd)>1 || rho_sd<0){stop(
"rho_sd must be a single non-negative number"
)}
##if(Tissue not in list){stop("Unknown Tissue selected. <display list>")}
if(!is.numeric(Nmax) || length(Nmax)>1 || Nmax<0 || floor(Nmax)!=Nmax){stop(
"Nmax must be a single positive integer")} else if(
Nmax<20){warning(
"Low Nmax may produce unreliable results. It is recommended that Nmax be at least 20"
)}
if(!is.numeric(MOE) || length(MOE) > 1 || MOE<0 || MOE>1){stop(
"MOE must be a single number in [0,1]"
)}
if(test %notin% c("pearson","kendall","spearman")){stop(
"Invalid test selected. Valid options are 'pearson', 'spearman' or 'kendall'"
)}
if(rho_mu < .05 && rho_mu>-.05){warning(
"|rho_mu| < .05 will be extremely difficult to detect"
)}
###Start Power Analysis
n <- sort(n)
out <- data.frame(sample_size = n, avg_power=0,sd_power=0,N=0)
if(test=="pearson"){
for(i in 1:length(n)){
Results <- get_power_findN(dm, Total, n[i], fdr, rho_mu, rho_sd, Tissue, Nmax, MOE)
out$avg_power[i] <- mean(Results$power)
out$sd_power[i] <- sd(Results$power)
out$N[i] <- nrow(Results)
}
} else{
for(i in 1:length(n)){
Results <- get_power_np(dm, Total, n[i], fdr, rho_mu, rho_sd, Tissue, Nmax, MOE, Nmin=20, test)
out$avg_power[i] <- mean(Results$power)
out$sd_power[i] <- sd(Results$power)
out$N[i] <- nrow(Results)
}
}
out
}
get_power(10,1000,10,.05,.6,test="kenall")
get_power <- function(dm, Total, n, fdr, rho_mu, rho_sd=0, Tissue="Saliva", Nmax=1000, MOE=.01, test="pearson"){
if(!is.numeric(dm) || length(dm)>1 || dm < 1 || floor(dm)!= dm){stop(
"The number of significant associations (dm) must be a single positive integer"
)}
if(!is.numeric(Total) || length(Total)>1 || Total < 1 || floor(Total)!= Total){stop(
"The total numnber of CpG sites (Total) must be a single positive integer"
)}
for(i in 1:length(n)){
if(!is.numeric(n[i]) || n[i] < 2 || floor(n[i])!= n[i]){stop(
"All sample sizes (n) must be positive integers greater than 1"
)}
}
if(dm > Total){stop(
"dm must be less than or equal to N"
)}
if(!is.numeric(fdr) || length(fdr)>1 || fdr <= 0 || fdr >= 1){stop(
"The False Discovery Rate (fdr) must be a single number in (0,1)"
)}
if(!is.numeric(rho_mu) || length(rho_mu)>1 || abs(rho_mu) > 1 || abs(rho_mu) <= 0){stop(
"rho_mu must be a single number with absolute value in (0,1]"
)}
if(!is.numeric(rho_sd) || length(rho_sd)>1 || rho_sd<0){stop(
"rho_sd must be a single non-negative number"
)}
##if(Tissue not in list){stop("Unknown Tissue selected. <display list>")}
if(!is.numeric(Nmax) || length(Nmax)>1 || Nmax<0 || floor(Nmax)!=Nmax){stop(
"Nmax must be a single positive integer")} else if(
Nmax<20){warning(
"Low Nmax may produce unreliable results. It is recommended that Nmax be at least 20"
)}
if(!is.numeric(MOE) || length(MOE) > 1 || MOE<0 || MOE>1){stop(
"MOE must be a single number in [0,1]"
)}
if(!(test %in% c("pearson","kendall","spearman"))){stop(
"Invalid test selected. Valid options are 'pearson', 'spearman' or 'kendall'"
)}
if(rho_mu < .05 && rho_mu>-.05){warning(
"|rho_mu| < .05 will be extremely difficult to detect"
)}
###Start Power Analysis
n <- sort(n)
out <- data.frame(sample_size = n, avg_power=0,sd_power=0,N=0)
if(test=="pearson"){
for(i in 1:length(n)){
Results <- get_power_findN(dm, Total, n[i], fdr, rho_mu, rho_sd, Tissue, Nmax, MOE)
out$avg_power[i] <- mean(Results$power)
out$sd_power[i] <- sd(Results$power)
out$N[i] <- nrow(Results)
}
} else{
for(i in 1:length(n)){
Results <- get_power_np(dm, Total, n[i], fdr, rho_mu, rho_sd, Tissue, Nmax, MOE, Nmin=20, test)
out$avg_power[i] <- mean(Results$power)
out$sd_power[i] <- sd(Results$power)
out$N[i] <- nrow(Results)
}
}
out
}
get_power(10,1000,10,.05,.6,test="kenall")
get_power(100,10000,c(20,40,60),.05,.3)
get_power(100,10000,seq(20,200,by=20),.05,.3,MOE=.05)
1.96*.05/sqrt(20)
get_power(100,10000,seq(20,200,by=20),.05,.3,MOE=c(.01,.05))
get_power(dm=100, ## Number of significant cpg sites
Total=100000, ##Total number of tested sites
n=c(10,20,30,40,50), ##Sample sizes to be tested (this is the only parameter that can take multiple inputs)
fdr=.05, ##false discovery rate - currently, the only adjustment you can do is the benjamini-Hochberg
rho_mu=.5, ##mean of the rho distribution
rho_sd=0, ##sd of the rho distribution (if 0, this means that all correlations are rho_mu)
MOE=.05, ##Target margin of error of a 95% confidence interval for the average power across all datasets
Nmax=1000, ##The maximum number of datasets tested (for each individual sample size)
test="pearson" ##What type of test. Can be pearson, kendall or spearman
)
get_power(dm=100, ## Number of significant cpg sites
Total=100000, ##Total number of tested sites
n=c(10,20,30,40,50), ##Sample sizes to be tested (this is the only parameter that can take multiple inputs)
fdr=.05, ##false discovery rate - currently, the only adjustment you can do is the benjamini-Hochberg
rho_mu=.5, ##mean of the rho distribution
rho_sd=0, ##sd of the rho distribution (if 0, this means that all correlations are rho_mu)
MOE=.05, ##Target margin of error of a 95% confidence interval for the average power across all datasets
Nmax=1000, ##The maximum number of datasets tested (for each individual sample size)
test="pearson" ##What type of test. Can be pearson, kendall or spearman
) -> sample_results
x11() ## <- replace with whatever your desired plotting format (or just remove it)
plot(sample_results$sample_size,sample_results$avg_power,type="b")
x11() ## <- replace with whatever your desired plotting format (or just remove it)
plot(sample_results$sample_size,sample_results$avg_power,type="b",ylim=c(0,1))
?pch
x <- sample_results$sample_size
y <- sample_results$avg_power
moe <- 1.96*sample_results$sd_power/sqrt(sample_results$N)
x
y
moe
x <- sample_results$sample_size
y <- sample_results$avg_power
moe <- 1.96*sample_results$sd_power/sqrt(sample_results$N)
x11() ## <- replace with whatever your desired plotting format (or just remove it)
plot(sample_results$sample_size,sample_results$avg_power,type="b",ylim=c(0,1))
arrows(x, y+moe, x, y-moe, angle=90, code=3, length=0.06, col="blue")
x11() ## <- replace with whatever your desired plotting format (or just remove it)
plot(sample_results$sample_size,sample_results$avg_power,type="b",ylim=c(min(Y)-max(moe),max(Y)+max(moe)))
arrows(x, y+moe, x, y-moe, angle=90, code=3, length=0.06, col="blue")
x11() ## <- replace with whatever your desired plotting format (or just remove it)
plot(sample_results$sample_size,sample_results$avg_power,type="b",ylim=c(min(y)-max(moe),max(y)+max(moe)))
arrows(x, y+moe, x, y-moe, angle=90, code=3, length=0.06, col="blue")
get_power(dm=100, ## Number of significant cpg sites
Total=100000, ##Total number of tested sites
n=c(10,20,30,40,50,60,70), ##Sample sizes to be tested (this is the only parameter that can take multiple inputs)
fdr=.05, ##false discovery rate - currently, the only adjustment you can do is the benjamini-Hochberg
rho_mu=.5, ##mean of the rho distribution
rho_sd=0, ##sd of the rho distribution (if 0, this means that all correlations are rho_mu)
MOE=.03, ##Target margin of error of a 95% confidence interval for the average power across all datasets
Nmax=1000, ##The maximum number of datasets tested (for each individual sample size)
test="pearson" ##What type of test. Can be pearson, kendall or spearman
) -> sample_results
x <- sample_results$sample_size
y <- sample_results$avg_power
moe <- 1.96*sample_results$sd_power/sqrt(sample_results$N)
x11() ## <- replace with whatever your desired plotting format (or just remove it)
plot(sample_results$sample_size,sample_results$avg_power,type="b",ylim=c(min(y)-max(moe),max(y)+max(moe)))
arrows(x, y+moe, x, y-moe, angle=90, code=3, length=0.06, col="blue")
x <- sample_results$sample_size
y <- sample_results$avg_power
moe <- 1.96*sample_results$sd_power/sqrt(sample_results$N)
x11() ## <- replace with whatever your desired plotting format (or just remove it)
plot(sample_results$sample_size,sample_results$avg_power,type="b",ylim=c(0,1),
xlab="Sample Size",ylab="Average Power (95% confidence interval)", main="Power curve for EWAS")
arrows(x, y+moe, x, y-moe, angle=90, code=3, length=0.06, col="blue")
plot(sample_results$sample_size,sample_results$avg_power,type="b",ylim=c(0,1),
xlab="Sample Size",ylab="Average Power (95% confidence interval)", main="Power Curve for EWAS")
arrows(x, y+moe, x, y-moe, angle=90, code=3, length=0.06, col="blue")
?x11
source("ParentFunction.R")
get_power(dm=100, ## Number of significant cpg sites
Total=100000, ##Total number of tested sites
n=c(10,20,30,40,50,60,70), ##Sample sizes to be tested (this is the only parameter that can take multiple inputs)
fdr=.05, ##false discovery rate - currently, the only adjustment you can do is the benjamini-Hochberg
rho_mu=.5, ##mean of the rho distribution
rho_sd=0, ##sd of the rho distribution (if 0, this means that all correlations are rho_mu)
MOE=.03, ##Target margin of error of a 95% confidence interval for the average power across all datasets
Nmax=1000, ##The maximum number of datasets tested (for each individual sample size)
test="pearson" ##What type of test. Can be pearson, kendall or spearman
) -> sample_results
sample_results
8.5*11
15*4
3.75/8
pnorm(1.24)
1-pnorm(1.24)
1-pnorm(1.24,5,4)
pnorm(1.24,5,4)
se <- sqrt(.25*.75/150)
se
pnorm(0.35,.25,se)
pnorm(0.27,.25,se)
pnorm(0.27,.25,se) - pnorm(0.23,.25,se)
pnorm(0.27,.25,se/sqrt(150)) - pnorm(0.23,.25,se/sqrt(150))
pnorm(0.05)
qnorm(0.05)
qt(.025,29)
qt(.025,30)
qt(.025,9)
qt(.025,10)
qt(.05,9)
X <- rnorm(100)
Y <- rnorm(100,-X,sqrt(.75))
Y <- rnorm(100,-.5*X,sqrt(.75))
x11()
plot(X,Y)
dbinom(0,10,.04)
dbinom(1,10,.04)
pbinom(1,10,.04)
.08/1.96
sqrt(17)*.08/1.96
160/400
sqrt(.4*.6*.01)
.1/sqrt(.4*.6*.01)
.1/sqrt(.35/200 + .45/200)
.1/sqrt(.35*.65/200 + .45*.55/200)
.1/sqrt(.35*.65/200)
.1/sqrt(.45*.55/200)
.1/sqrt(.45*.55/400)
25*2.5
100-25*2.5
log10(.05/20000)
log10(40*.05/20000)
log10(90*.05/20000)
log10(190*.05/20000)
log10(.05/20000)
log10(.05/20000)+2.2
10^3.4
log10(2512*.05/20000)
10^3.2
log10(.05)
log10(.1)
2^17
2^10
pt(2.8,14)
1-pt(2.8,14)
1-pnorm(2.8)
1-pnorm(2.7)
1-pt(2.7,14)
1-pt(2.5,14)
1-pt(2.5,14)
1-pnorm(2.5)
150/400
sqrt(.375*.625*.01)
se<-sqrt(.375*.625*.01)
-.25/se
se2<-sqrt(.25*.75*.005+.25*.005)
se2
-.25/se2
8/15
9/15
10/15
9.2/15
75*seq(15,0,1)/15
75*seq(15)/15
75*seq(14)/14
75-75*seq(14)/14
75-75*seq(14)/14+2
75-75*seq(14)/14-2
pnorm(1.23)
2*(1-pnorm(1.23))
sqrt((1-.25^2)/13
)
.25sqrt((1-.25^2)/13)
.25/sqrt((1-.25^2)/13)
2*pt(0.9309,13)
2*(1-pt(0.9309,13))
70/120
70/120-.63
sqrt(.63*.37/120)
(70/120-.63)/.0440738
pnorm(-1.0588)
60/110
60/110-.59
sqrt(.59*.41/110)
-0.04454545/sqrt(.59*.41/110)
pnorm(-.9499)
pnorm(-.9596)
pnorm(-.853)
35/16
1-pt(2.1875,24)
2*(1-pt(2.1875,24))
85/6
30/(85/6)
1-pt(2.118,35)
2*(1-pt(2.118,35))
X <- runif(100000)
Y <- runif(100000)
Z <- abs(X-Y)
mean(Z)
X <- runif(1000000)
Y <- runif(1000000)
Z <- abs(X-Y)
mean(Z)
X1 <- runif(100000)
X2 <- runif(100000)
Y1 <- runif(100000)
Y2 <- runif(100000)
Z <- sqrt((X1-X2)^2+(Y1-Y2)^2)
mean(Z)
sqrt(2)/3
1-sqrt(2)/3
power.t.test(delta=.5,power=0.8,type="two.sample",alternative="two.sided")
power.t.test(delta=.6,power=0.8,type="two.sample",alternative="two.sided")
1/sqrt(2)
.25*sqrt(13)/sqrt(1-.25^2)
pt(-.931,13)
2*pt(-.931,13)
13*100*25
32500/60
(32500/60)/24
(32500/60)/(24*4)
.18/10
abfinder <- function(obj){
rc <- dim(obj)
if(rc[2] > rc[1]){warning("Number of samples (cols) larger than number of CpG
sites (rows). Please ensure that the data does not
need to be transposed.")}
mu_vals <- apply(obj,1,function(v){mean(as.numeric(v[!is.na(v)]))})
var_vals <- apply(obj,1,function(v){var(as.numeric(v[!is.na(v)]))})
ab <- t(get_ab(mu_vals,var_vals))
###Quality Control
num_na <- apply(ab,2,function(v){length(v[is.na(v)])})
num_negs <- apply(ab,2,function(v){length(v[!is.na(v) & v<0])})
if(num_na[1]>0 | num_na[2]>0 ){warning(
paste0("The provided dataset produced ", num_na[1], " parameter estimate(s) with
NA values. These cpG sites will be ignored"))
}
if(num_negs[1]>0 | num_negs[2]>0 ){warning(
paste0("The provided dataset produced ", num_negs[2], " parameter estimate(s)
with negative values. These cpG sites will be ignored."))
}
ab[!is.na(ab[,1]) & !is.na(ab[,2]) & ab[,1]>=0 & ab[,2]>=0, ]
}
gpcont_check <- function(dm, Total, n, fdr_fwer, rho_mu, rho_sd=0,
Tissue="Saliva", Nmax=1000, MOE=.03, test="pearson",
use_fdr=TRUE, Suppress_updates=FALSE, emp_data=NULL){
tiss <- c("Saliva", "Lymphoma", "Placenta", "Liver", "Colon", "Blood adult",
"Blood 5 year olds",  "Blood newborns", "Cord-blood (whole blood)",
"Cord-blood (PBMC)", "Adult (PBMC)", "Sperm", "Custom")
if(!is.numeric(dm) || length(dm)>1 || dm < 1 || floor(dm)!= dm){stop(
"The number of significant associations (dm) must be a single positive
integer")}
if(!is.numeric(Total) || length(Total)>1 || Total < 1 ||
floor(Total)!= Total){stop(
"The total numnber of CpG sites (Total) must be a single positive
integer")
}
for(i in seq_len(length(n))){
if(!is.numeric(n[i]) || n[i] < 2 || floor(n[i])!= n[i]){stop(
"All sample sizes (n) must be positive integers greater than 1")}
}
if(dm > Total){stop("dm must be less than or equal to N")}
if(!is.numeric(fdr_fwer) || length(fdr_fwer)>1 || fdr_fwer <= 0 ||
fdr_fwer >= 1){stop("fdr_fwer must be a single number in (0,1)")}
for (i in seq_len(length(rho_mu))){
if(!is.numeric(rho_mu[i]) || abs(rho_mu[i]) > 1 || abs(rho_mu[i]) <= 0){
stop("All correlations (rho_mu) must have absolute value in (0,1]")}
if(rho_mu[i] < .05 && rho_mu[i]>-.05){warning(
"|rho_mu| < .05 will be extremely difficult to detect")}
}
if(!is.numeric(rho_sd) || length(rho_sd)>1 || rho_sd<0){stop(
"rho_sd must be a single non-negative number"
)}
if(!(Tissue %in% tiss)){stop(
"Unknown Tissue selected. Valid options are Saliva, Lymphoma, Placenta,
Liver, Colon, Blood adult, Blood 5 year olds, Blood newborns,
Cord-blood (whole blood), Cord-blood (PBMC), Adult (PBMC), Sperm"
)}
if(!is.numeric(Nmax) || length(Nmax)>1 || Nmax<20 || floor(Nmax)!=Nmax){
stop("Nmax must be a positive integer greater than or equal to 20")
}
if(!is.numeric(MOE) || length(MOE) > 1 || MOE<0 || MOE>1){stop(
"MOE must be a single number in [0,1]"
)}
if(!(test %in% c("pearson","kendall","spearman"))){stop(
"Invalid test selected. Valid options are 'pearson', 'spearman' or
'kendall'"
)}
if(!identical(use_fdr,TRUE) && !identical(use_fdr,FALSE)){stop(
"use_fdr must be boolean (either TRUE or FALSE)"
)}
if(Tissue=="Custom" & !(is.matrix(emp_data) | is.data.frame(emp_data))){stop(
"emp_data must be in matrix or data frame format"
)}
}
gpcont_check(10,100,100,.05,.2,.1,"Custom",emp_data=2)
gpcont_check(10,100,100,.05,.2,.1,"Custom",emp_data=matrix(c(1,2,3,4),2,2))
gpcont_check(10,100,100,.05,.2,.1,"Custom")
gpcont_check(10,100,100,.05,.2,.1,"Saliva")
setwd("C:/Users/Jackson_Barth/Documents/Packages_local/EpipwR")
devtools::load_all()
get_power_cont(100,1000,.05,.2)
get_power_cont(100,1000,100,.05,.2)
sqrt(.05*.95)
sqrt(.01*.99)
sqrt(.5*.5)
sqrt(.05*.95/20)

